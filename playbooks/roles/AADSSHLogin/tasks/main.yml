---
# roles/AADSSHLogin/tasks/main.yml

# 0) Derive identifiers from dynamic inventory (robust fallbacks)
- name: Derive Azure identifiers from hostvars
  vars:
    hv: "{{ hostvars[inventory_hostname] }}"
  set_fact:
    # Prefer values the azure_rm inventory usually provides; fall back to parsing the resource ID
    azure_rg: >-
      {{ hv.resource_group
         | default((hv.id | default('')).split('/')[4] | default(omit)) }}
    azure_vm_name: >-
      {{ hv.name
         | default((hv.id | default('')).split('/')[-1]
         | default(inventory_hostname)) }}
    azure_location: "{{ hv.location | default(omit) }}"

- name: Validate required identifiers
  assert:
    that:
      - azure_rg is defined
      - azure_vm_name is defined
    fail_msg: >
      Missing resource_group and/or VM name in hostvars for {{ inventory_hostname }}.
      Ensure your azure_rm inventory populates 'resource_group' and 'name' or that 'id' is present.

# 1) If location isn't in hostvars, fetch it from the VM
- name: Get VM info when location is missing
  when: azure_location is not defined
  azure.azcollection.azure_rm_virtualmachine_info:
    resource_group: "{{ azure_rg }}"
    name: "{{ azure_vm_name }}"
  register: vm_info

- name: Set location and image metadata
  when: azure_location is not defined and (vm_info.vms | length) > 0
  set_fact:
    azure_location: "{{ (vm_info.vms | first).location }}"
    vm_image_publisher: "{{ (vm_info.vms | first).storage_profile.image_reference.publisher | default('') }}"
    vm_image_offer: "{{ (vm_info.vms | first).storage_profile.image_reference.offer | default('') }}"

# 2) Query the specific extension by name
- name: Get AAD SSH extension info
  azure.azcollection.azure_rm_virtualmachineextension_info:
    resource_group: "{{ azure_rg }}"
    virtual_machine_name: "{{ azure_vm_name }}"   # <-- correct param name
    name: "AADSSHLoginForLinux"
  register: extension_info

# 3) Install extension only if not present (Ubuntu/Debian images)
- name: Ensure AADSSHLoginForLinux is present (Ubuntu/Debian only)
  azure.azcollection.azure_rm_virtualmachineextension:
    resource_group: "{{ azure_rg }}"
    virtual_machine_name: "{{ azure_vm_name }}"   # <-- correct param name
    name: "AADSSHLoginForLinux"
    location: "{{ azure_location }}"
    publisher: "Microsoft.Azure.ActiveDirectory"
    virtual_machine_extension_type: "AADSSHLoginForLinux"
    type_handler_version: "1.0"
    auto_upgrade_minor_version: true
    state: present
  when:
    - (extension_info.extensions | selectattr('name', 'equalto', 'AADSSHLoginForLinux') | list | length) == 0
    - >
      (vm_image_publisher | default(hostvars[inventory_hostname].image_publisher | default(''))) | lower in ['canonical','debian']
      or
      (vm_image_offer | default(hostvars[inventory_hostname].image_offer | default(''))) | lower is search('ubuntu|debian')